{"ast":null,"code":"var _jsxFileName = \"/Users/mustapha/Desktop/Develop/mustaphachqoubi-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Navbar, Services } from \"./components\";\nimport Home from \"./pages/Home\";\nimport { useDispatch } from \"react-redux\";\nimport { Routes, BrowserRouter, Route } from \"react-router-dom\";\nimport { setCurrentScrollingLevel } from \"./Redux/reducers/currentScrollingLevel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  function throttle(func, delay) {\n    let timeoutId;\n    let lastExecTime = 0;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const currentTime = new Date().getTime();\n      const timeSinceLastExec = currentTime - lastExecTime;\n      if (!timeoutId && timeSinceLastExec >= delay) {\n        func.apply(this, args);\n        lastExecTime = currentTime;\n      } else if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          timeoutId = null;\n          lastExecTime = new Date().getTime();\n          func.apply(this, args);\n        }, delay - timeSinceLastExec);\n      }\n    };\n  }\n  useEffect(() => {\n    window.addEventListener(\"scroll\", throttle(() => {\n      dispatch(setCurrentScrollingLevel(window.pageYOffset));\n    }, 100));\n  }, [dispatch]);\n  const handleSticker = isClick => {\n    !isClick ? console.log('no') : console.log('click');\n  };\n  window.addEventListener('click', handleSticker(true));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thecontainer max-w-[1440px] mx-auto relative\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        handleSticker: handleSticker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/services\",\n          element: /*#__PURE__*/_jsxDEV(Services, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Navbar","Services","Home","useDispatch","Routes","BrowserRouter","Route","setCurrentScrollingLevel","jsxDEV","_jsxDEV","App","_s","dispatch","throttle","func","delay","timeoutId","lastExecTime","_len","arguments","length","args","Array","_key","currentTime","Date","getTime","timeSinceLastExec","apply","setTimeout","window","addEventListener","pageYOffset","handleSticker","isClick","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/mustapha/Desktop/Develop/mustaphachqoubi-website/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Navbar, Services } from \"./components\";\nimport Home from \"./pages/Home\";\nimport { useDispatch } from \"react-redux\";\nimport { Routes, BrowserRouter, Route } from \"react-router-dom\";\n\nimport { setCurrentScrollingLevel } from \"./Redux/reducers/currentScrollingLevel\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  function throttle(func, delay) {\n    let timeoutId;\n    let lastExecTime = 0;\n    return function (...args) {\n      const currentTime = new Date().getTime();\n      const timeSinceLastExec = currentTime - lastExecTime;\n      if (!timeoutId && timeSinceLastExec >= delay) {\n        func.apply(this, args);\n        lastExecTime = currentTime;\n      } else if (!timeoutId) {\n        timeoutId = setTimeout(() => {\n          timeoutId = null;\n          lastExecTime = new Date().getTime();\n          func.apply(this, args);\n        }, delay - timeSinceLastExec);\n      }\n    };\n  }\n  useEffect(() => {\n    window.addEventListener(\n      \"scroll\",\n      throttle(() => {\n        dispatch(setCurrentScrollingLevel(window.pageYOffset));\n      }, 100)\n    );\n  }, [dispatch]);\n\n  const handleSticker = (isClick) => {\n    !isClick ? console.log('no') : console.log('click') \n  }\n\nwindow.addEventListener('click', handleSticker(true))\n\n  return (\n    <div className=\"thecontainer max-w-[1440px] mx-auto relative\">\n      <BrowserRouter>\n        <Navbar handleSticker={handleSticker}/>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/services\" element={<Services />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}